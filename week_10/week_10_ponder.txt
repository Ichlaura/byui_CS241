Your Name: Lewis Lockhart

1. What is one advantage of MergeSort compared to QuickSort, and one advantage of QuickSort?
--> Merge sort is more efficient and works faster than quick sort in case of larger array size or datasets.
--> Quick sort is more efficient and works faster than merge sort in case of smaller array size or datasets.

2. What sorting algorithm is the default, built-in algorithm used by Python? (Use the Internet to track this down.)
Briefly describe how it works.
--> Timsort is a hybrid sorting algorithm, derived from merge sort and insertion sort, designed to perform
--> well on many kinds of real-world data. It was invented by Tim Peters in 2002 for use in the Python programming
--> language. The algorithm finds subsets of the data that are already ordered, and uses the subsets to sort the
--> data more efficiently. This is done by merging an identified subset, called a run, with existing runs until
--> certain criteria are fulfilled. Timsort has been Python's standard sorting algorithm since version 2.3. It is
--> now also used to sort arrays in Java SE 7, and on the Android platform.
--> https://stackoverflow.com/questions/10948920/what-algorithm-does-pythons-sorted-use

3. What is the most interesting thing you learned as a part of your work for this class this week?
--> I learned that writing sorts is a huge pain in the butt. I am glad there is a .sort() in python.

4. Describe one specific way that you helped someone else this week, or reached out for help.
--> I asked for help understanding the process of adding smaller asteroids when the larger ones were broken.
--> Erik M. suggested just passing the asteroids list - which worked perfectly.

5. Are there any topics from this week that you still feel uneasy about, or would like to learn more about?
--> I am not able to write any of the sort functions from the top of my head. I think this is an issue
--> for up-coming job interviews.

6. How much time did you spend this week on each of the following:

Reading - 2
Checkpoint A - 2
Checkpoint B - 2
Team Activity - 2
Data Structures Homework - 0.5
Prove Assignment - 4
